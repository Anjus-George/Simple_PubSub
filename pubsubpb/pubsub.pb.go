// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simple_pubsub/pubsubpb/pubsub.proto

package pubsubpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProduceRequest struct {
	Item                 string   `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Topic                string   `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProduceRequest) Reset()         { *m = ProduceRequest{} }
func (m *ProduceRequest) String() string { return proto.CompactTextString(m) }
func (*ProduceRequest) ProtoMessage()    {}
func (*ProduceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_27faed699bebcd0c, []int{0}
}

func (m *ProduceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProduceRequest.Unmarshal(m, b)
}
func (m *ProduceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProduceRequest.Marshal(b, m, deterministic)
}
func (m *ProduceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProduceRequest.Merge(m, src)
}
func (m *ProduceRequest) XXX_Size() int {
	return xxx_messageInfo_ProduceRequest.Size(m)
}
func (m *ProduceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProduceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProduceRequest proto.InternalMessageInfo

func (m *ProduceRequest) GetItem() string {
	if m != nil {
		return m.Item
	}
	return ""
}

func (m *ProduceRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type ProduceResponse struct {
	//ResultMessage result_message = 1;
	TopicLength          int64    `protobuf:"varint,2,opt,name=topic_length,json=topicLength,proto3" json:"topic_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProduceResponse) Reset()         { *m = ProduceResponse{} }
func (m *ProduceResponse) String() string { return proto.CompactTextString(m) }
func (*ProduceResponse) ProtoMessage()    {}
func (*ProduceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27faed699bebcd0c, []int{1}
}

func (m *ProduceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProduceResponse.Unmarshal(m, b)
}
func (m *ProduceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProduceResponse.Marshal(b, m, deterministic)
}
func (m *ProduceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProduceResponse.Merge(m, src)
}
func (m *ProduceResponse) XXX_Size() int {
	return xxx_messageInfo_ProduceResponse.Size(m)
}
func (m *ProduceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProduceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProduceResponse proto.InternalMessageInfo

func (m *ProduceResponse) GetTopicLength() int64 {
	if m != nil {
		return m.TopicLength
	}
	return 0
}

type ConsumeRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	StartIndex           int64    `protobuf:"varint,2,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	FetchSize            int64    `protobuf:"varint,3,opt,name=fetch_size,json=fetchSize,proto3" json:"fetch_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumeRequest) Reset()         { *m = ConsumeRequest{} }
func (m *ConsumeRequest) String() string { return proto.CompactTextString(m) }
func (*ConsumeRequest) ProtoMessage()    {}
func (*ConsumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_27faed699bebcd0c, []int{2}
}

func (m *ConsumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeRequest.Unmarshal(m, b)
}
func (m *ConsumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeRequest.Marshal(b, m, deterministic)
}
func (m *ConsumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeRequest.Merge(m, src)
}
func (m *ConsumeRequest) XXX_Size() int {
	return xxx_messageInfo_ConsumeRequest.Size(m)
}
func (m *ConsumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeRequest proto.InternalMessageInfo

func (m *ConsumeRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *ConsumeRequest) GetStartIndex() int64 {
	if m != nil {
		return m.StartIndex
	}
	return 0
}

func (m *ConsumeRequest) GetFetchSize() int64 {
	if m != nil {
		return m.FetchSize
	}
	return 0
}

type ConsumeResponse struct {
	//ResultMessage result_message = 1;
	ResponseMessage      string   `protobuf:"bytes,1,opt,name=response_message,json=responseMessage,proto3" json:"response_message,omitempty"`
	ItemList             []string `protobuf:"bytes,2,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
	LastConsumedIndex    int64    `protobuf:"varint,3,opt,name=last_consumed_index,json=lastConsumedIndex,proto3" json:"last_consumed_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumeResponse) Reset()         { *m = ConsumeResponse{} }
func (m *ConsumeResponse) String() string { return proto.CompactTextString(m) }
func (*ConsumeResponse) ProtoMessage()    {}
func (*ConsumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27faed699bebcd0c, []int{3}
}

func (m *ConsumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeResponse.Unmarshal(m, b)
}
func (m *ConsumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeResponse.Marshal(b, m, deterministic)
}
func (m *ConsumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeResponse.Merge(m, src)
}
func (m *ConsumeResponse) XXX_Size() int {
	return xxx_messageInfo_ConsumeResponse.Size(m)
}
func (m *ConsumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeResponse proto.InternalMessageInfo

func (m *ConsumeResponse) GetResponseMessage() string {
	if m != nil {
		return m.ResponseMessage
	}
	return ""
}

func (m *ConsumeResponse) GetItemList() []string {
	if m != nil {
		return m.ItemList
	}
	return nil
}

func (m *ConsumeResponse) GetLastConsumedIndex() int64 {
	if m != nil {
		return m.LastConsumedIndex
	}
	return 0
}

func init() {
	proto.RegisterType((*ProduceRequest)(nil), "pubsub.ProduceRequest")
	proto.RegisterType((*ProduceResponse)(nil), "pubsub.ProduceResponse")
	proto.RegisterType((*ConsumeRequest)(nil), "pubsub.ConsumeRequest")
	proto.RegisterType((*ConsumeResponse)(nil), "pubsub.ConsumeResponse")
}

func init() {
	proto.RegisterFile("simple_pubsub/pubsubpb/pubsub.proto", fileDescriptor_27faed699bebcd0c)
}

var fileDescriptor_27faed699bebcd0c = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xcf, 0x4f, 0xea, 0x40,
	0x10, 0xc7, 0x29, 0xbc, 0xc7, 0xa3, 0xc3, 0x13, 0x74, 0x35, 0xda, 0x68, 0x8c, 0x58, 0x2f, 0x78,
	0xc1, 0x44, 0x3d, 0x19, 0x4f, 0x7a, 0x32, 0xc1, 0x84, 0x94, 0x9b, 0x97, 0x0d, 0x6d, 0x07, 0xd8,
	0xa4, 0xbf, 0xec, 0xec, 0x1a, 0xc3, 0x7f, 0x60, 0xfc, 0xa7, 0x4d, 0x77, 0x97, 0x22, 0x7a, 0xea,
	0xec, 0x67, 0x3a, 0xf3, 0xfd, 0xee, 0xec, 0xc0, 0x05, 0x89, 0xb4, 0x48, 0x90, 0x17, 0x2a, 0x24,
	0x15, 0x5e, 0x99, 0x4f, 0xb1, 0x0e, 0x46, 0x45, 0x99, 0xcb, 0x9c, 0xb5, 0xcd, 0xc9, 0xbf, 0x83,
	0xde, 0xa4, 0xcc, 0x63, 0x15, 0x61, 0x80, 0xaf, 0x0a, 0x49, 0x32, 0x06, 0x7f, 0x84, 0xc4, 0xd4,
	0x73, 0x06, 0xce, 0xd0, 0x0d, 0x74, 0xcc, 0x0e, 0xe0, 0xaf, 0xcc, 0x0b, 0x11, 0x79, 0x4d, 0x0d,
	0xcd, 0xc1, 0xbf, 0x85, 0x7e, 0x5d, 0x4b, 0x45, 0x9e, 0x11, 0xb2, 0x73, 0xf8, 0xaf, 0x73, 0x3c,
	0xc1, 0x6c, 0x21, 0x97, 0xfa, 0xff, 0x56, 0xd0, 0xd5, 0x6c, 0xac, 0x91, 0x3f, 0x87, 0xde, 0x63,
	0x9e, 0x91, 0x4a, 0x6b, 0xc5, 0xba, 0xbb, 0xf3, 0xad, 0x3b, 0x3b, 0x83, 0x2e, 0xc9, 0x59, 0x29,
	0xb9, 0xc8, 0x62, 0x7c, 0xb7, 0x9d, 0x40, 0xa3, 0xa7, 0x8a, 0xb0, 0x53, 0x80, 0x39, 0xca, 0x68,
	0xc9, 0x49, 0xac, 0xd0, 0x6b, 0xe9, 0xbc, 0xab, 0xc9, 0x54, 0xac, 0xd0, 0xff, 0x70, 0xa0, 0x5f,
	0x0b, 0x59, 0x7b, 0x97, 0xb0, 0x5b, 0xda, 0x98, 0xa7, 0x48, 0x34, 0x5b, 0xa0, 0x15, 0xed, 0xaf,
	0xf9, 0xb3, 0xc1, 0xec, 0x04, 0xdc, 0xea, 0xea, 0x3c, 0x11, 0x24, 0xbd, 0xe6, 0xa0, 0x35, 0x74,
	0x83, 0x4e, 0x05, 0xc6, 0x82, 0x24, 0x1b, 0xc1, 0x7e, 0x32, 0x23, 0xc9, 0x23, 0xd3, 0x3f, 0xb6,
	0x1e, 0x8d, 0x87, 0xbd, 0x2a, 0x65, 0x95, 0x63, 0x6d, 0xf5, 0xfa, 0xd3, 0x81, 0x9d, 0x89, 0x0a,
	0xa7, 0x2a, 0x9c, 0x62, 0xf9, 0x26, 0x22, 0x64, 0xf7, 0xf0, 0xcf, 0xce, 0x8e, 0x1d, 0x8e, 0xec,
	0xcb, 0x6c, 0x3f, 0xc4, 0xf1, 0xd1, 0x2f, 0x6e, 0x1c, 0xfa, 0x8d, 0xaa, 0xda, 0x0a, 0x6c, 0xaa,
	0xb7, 0x87, 0xba, 0xa9, 0xfe, 0x31, 0x03, 0xbf, 0xf1, 0x00, 0x2f, 0x9d, 0xf5, 0x52, 0x84, 0x6d,
	0xbd, 0x0e, 0x37, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x26, 0xb3, 0x83, 0xac, 0x35, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PubSubServiceClient is the client API for PubSubService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PubSubServiceClient interface {
	Produce(ctx context.Context, in *ProduceRequest, opts ...grpc.CallOption) (*ProduceResponse, error)
	Consume(ctx context.Context, in *ConsumeRequest, opts ...grpc.CallOption) (*ConsumeResponse, error)
}

type pubSubServiceClient struct {
	cc *grpc.ClientConn
}

func NewPubSubServiceClient(cc *grpc.ClientConn) PubSubServiceClient {
	return &pubSubServiceClient{cc}
}

func (c *pubSubServiceClient) Produce(ctx context.Context, in *ProduceRequest, opts ...grpc.CallOption) (*ProduceResponse, error) {
	out := new(ProduceResponse)
	err := c.cc.Invoke(ctx, "/pubsub.PubSubService/Produce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pubSubServiceClient) Consume(ctx context.Context, in *ConsumeRequest, opts ...grpc.CallOption) (*ConsumeResponse, error) {
	out := new(ConsumeResponse)
	err := c.cc.Invoke(ctx, "/pubsub.PubSubService/Consume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PubSubServiceServer is the server API for PubSubService service.
type PubSubServiceServer interface {
	Produce(context.Context, *ProduceRequest) (*ProduceResponse, error)
	Consume(context.Context, *ConsumeRequest) (*ConsumeResponse, error)
}

func RegisterPubSubServiceServer(s *grpc.Server, srv PubSubServiceServer) {
	s.RegisterService(&_PubSubService_serviceDesc, srv)
}

func _PubSubService_Produce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProduceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PubSubServiceServer).Produce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pubsub.PubSubService/Produce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PubSubServiceServer).Produce(ctx, req.(*ProduceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PubSubService_Consume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConsumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PubSubServiceServer).Consume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pubsub.PubSubService/Consume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PubSubServiceServer).Consume(ctx, req.(*ConsumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PubSubService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pubsub.PubSubService",
	HandlerType: (*PubSubServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Produce",
			Handler:    _PubSubService_Produce_Handler,
		},
		{
			MethodName: "Consume",
			Handler:    _PubSubService_Consume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "simple_pubsub/pubsubpb/pubsub.proto",
}
